
import java.io.File;
import java.io.FileNotFoundException;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.Scanner;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Bilal Ahmad
 */
public class MainWindow extends javax.swing.JFrame {

   public Graph maingraph;
   public ControlCentre cc;
   Vertex tobook;
   Calendar booked;
    public MainWindow()
    {
        intialize();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        listdeparture = new javax.swing.JComboBox<>();
        departure = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        arrival = new javax.swing.JTextField();
        Search = new javax.swing.JButton();
        listarrival = new javax.swing.JComboBox<>();
        listdate = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        date = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        showinfo = new javax.swing.JTextArea();
        book = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setBackground(new java.awt.Color(51, 204, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("Welcome to Trevor International Airlines");

        listdeparture.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dubai,United Arab Emirates UAE", "Karachi,Pakistan", "Tokyo,Japan", "Makkah,Saudia Arabia", "New York,United States Of America", "London,United Kingdom", "Istanbul,Turkey", "Bangkok,Thailand", " " }));
        listdeparture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listdepartureActionPerformed(evt);
            }
        });

        jLabel2.setText("Departure");

        jLabel3.setText("Arrival");

        Search.setBackground(new java.awt.Color(51, 204, 255));
        Search.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        Search.setText("Search Flight");
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });

        listarrival.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dubai,United Arab Emirates UAE", "Karachi,Pakistan", "Tokyo,Japan", "Makkah,Saudia Arabia", "New York,United States Of America", "London,United Kingdom", "Istanbul,Turkey", "Bangkok,Thailand" }));

        listdate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2022-01-01", "2022-01-02", "2022-01-03", "2022-01-04", "2022-01-05", "2022-01-06", "2022-01-07", "2022-01-08", "2022-01-09", "2022-01-10", "2022-01-11", "2022-01-12", "2022-01-13", "2022-01-14", "2022-01-15", "2022-01-16", "2022-01-17", "2022-01-18" }));

        jLabel4.setText("Select Date");

        showinfo.setColumns(20);
        showinfo.setRows(5);
        jScrollPane1.setViewportView(showinfo);

        book.setBackground(new java.awt.Color(51, 204, 255));
        book.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        book.setText("Book Flight");
        book.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 153, 153));
        jLabel5.setText("Fly High With Us");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(listdeparture, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(departure, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(listarrival, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arrival, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(127, 127, 127))
            .addGroup(layout.createSequentialGroup()
                .addGap(298, 298, 298)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Search, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(94, 94, 94)
                .addComponent(book, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(321, 321, 321)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(listdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 718, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(231, 231, 231)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5)
                        .addGap(54, 54, 54))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(64, 64, 64)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(departure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(arrival, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(listdeparture, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(listarrival, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(listdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Search)
                    .addComponent(book))
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        intialize();
        departure.setText(listdeparture.getSelectedItem().toString());
        arrival.setText(listarrival.getSelectedItem().toString());
        date.setText(listdate.getSelectedItem().toString());
        String depart=departure.getText();
        String arri=arrival.getText();
        String[] calendar=date.getText().split("-");
        Calendar a=new GregorianCalendar(Integer.parseInt(calendar[0]),Integer.parseInt(calendar[1]),Integer.parseInt(calendar[2]));
        int day=a.get(Calendar.DAY_OF_MONTH);   
       if(!depart.isEmpty() && !arri.isEmpty())
       {
           String[] departarr=depart.split(",");
           String[] arriarr=arri.split(",");
           cc.getSchedule(a).flightmap.disjktraShortest(cc.getSchedule(a).flightmap.Find(departarr[0],departarr[1] ));
        
      
       for(int i=0;i<cc.getSchedule(a).flightmap.adjList.length;i++)
       {
        if(cc.getSchedule(a).flightmap.adjList[i]!=null)
        {
          if(cc.getSchedule(a).flightmap.adjList[i].equals(cc.getSchedule(a).flightmap.Find(arriarr[0], arriarr[1])))
          {   
            
               if(cc.getSchedule(a).flightmap.adjList[i].path.Length()<=0)
              {
                 
                  showinfo.setText("Flight Status : UnAvailable\n No Flight from "+cc.getSchedule(a).flightmap.Find(departarr[0], departarr[1])+" to "+cc.getSchedule(a).flightmap.adjList[i]);
              }
               
              else
             {
               
                 
                
                     String str="";
                     str+=" Flight Status : Available \n";
                     str+="Ticket Price is "+cc.getSchedule(a).flightmap.adjList[i].mindistance+" RS \n";
                     str+="Connected Points Towards Destinations  :"+(cc.getSchedule(a).flightmap.adjList[i].path.Length()-1)+"\n";
                     cc.getSchedule(a).flightmap.adjList[i].path.Insert(cc.getSchedule(a).flightmap.adjList[i], 0);
                     str+="Flight Route  :"+cc.getSchedule(a).flightmap.adjList[i].path.forpath();
                     tobook=cc.getSchedule(a).flightmap.adjList[i];
                     booked=a;
                     showinfo.setText(str);
                     break;
                
             
             }
        }
       }
       }
       }  
    }//GEN-LAST:event_SearchActionPerformed

    private void listdepartureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listdepartureActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_listdepartureActionPerformed

    private void bookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookActionPerformed
        if(tobook==null)
        {
            JOptionPane.showMessageDialog(this, "There exists no Flight to book");
        }
        else
        {
            this.hide();
             new BookFlight(cc,tobook,booked).setVisible(true);
             
        }
    }//GEN-LAST:event_bookActionPerformed
   public  void intialize()
   {
       Graph flights=new Graph();
       try
       {
         File vertices = new File("Vertices.txt");
         Scanner sc = new Scanner(vertices);
         while (sc.hasNextLine()) 
         {
           String data = sc.nextLine();
           String[] airport=data.split(",");
           flights.AddVertex(airport[0],airport[1]);
         }
        }
        catch(FileNotFoundException e)
        {
           System.out.println("File not found ");
        }
      
        maingraph=flights; 
       try
       {
         File edges = new File("Edges.txt");
         Scanner sc = new Scanner(edges);
         while (sc.hasNextLine()) 
         {
           String data = sc.nextLine();
           String[] edge=data.split(",");
           flights.AddEdge(edge[0],edge[1],edge[2],edge[3],Integer.parseInt(edge[4])); 
         }
        }
        catch(FileNotFoundException e)
        {
           System.out.println("File not found ");
        }
     
        ControlCentre cc=new ControlCentre(flights);
         this.cc=cc;
        try
       {
         File dates = new File("Dates.txt");
         Scanner sc = new Scanner(dates);
         while (sc.hasNextLine()) 
         {
           String data = sc.nextLine();
           String[] date=data.split("-");
           cc.putdate(new GregorianCalendar(Integer.parseInt(date[0]),Integer.parseInt(date[1]),Integer.parseInt(date[2] )));
         }
        }
        catch(FileNotFoundException e)
        {
           System.out.println("File not found ");
        }
    
        
         try
       {
         File addflight = new File("FlightsScheduled.txt");
         Scanner sc = new Scanner(addflight);
         while (sc.hasNextLine()) 
         {
           String data = sc.nextLine();
           String[] fligh=data.split(",");
           String[] date=fligh[0].split("-");
           Calendar a=new GregorianCalendar(Integer.parseInt(date[2]),Integer.parseInt(date[1]),Integer.parseInt(date[0] ));
          cc.addFlight(a,cc.mymap.Find(fligh[1], fligh[2]),cc.mymap.Find(fligh[3], fligh[4]),fligh[5],fligh[6],fligh[7],fligh[8],Integer.parseInt(fligh[9]));
         }
        }
        catch(FileNotFoundException e)
        {
           System.out.println("File not found ");
        }
    
   }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            
            public  void run() 
            {
                
    
                new MainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Search;
    private javax.swing.JTextField arrival;
    private javax.swing.JButton book;
    private javax.swing.JTextField date;
    private javax.swing.JTextField departure;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> listarrival;
    private javax.swing.JComboBox<String> listdate;
    private javax.swing.JComboBox<String> listdeparture;
    private javax.swing.JTextArea showinfo;
    // End of variables declaration//GEN-END:variables
}
